name: "Charts: Release"

concurrency: helm-release

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - "charts/**"

jobs:
  release-scale:
    runs-on: ubuntu-latest
    outputs:
      ref: ${{ steps.save-commit-hash.outputs.commit_hash }}
    steps:
      - name: Install Kubernetes tools
        uses: yokawasa/action-setup-kube-tools@8249217d23f5ccc53a92b1a2b1f6797f6bc0947a # v0.11.3
        with:
          setup-tools: |
            helmv3
          helm: "3.14.0"

      - name: Prep go-yq
        run: |
          wget https://github.com/mikefarah/yq/releases/download/v4.26.1/yq_linux_amd64 -O /usr/local/bin/go-yq && chmod +x /usr/local/bin/go-yq
          
      # Optional step if GPG signing is used
      # - name: Prepare GPG key
        # shell: bash
        # run: |
          # gpg_dir=.cr-gpg
          # mkdir -p "$gpg_dir"
          # keyring="$gpg_dir/secring.gpg"
          # base64 -d <<< "$GPG_KEYRING_BASE64" > "$keyring"
          # passphrase_file="$gpg_dir/passphrase"
          # echo "$GPG_PASSPHRASE" > "$passphrase_file"
          # echo "CR_PASSPHRASE_FILE=$passphrase_file" >> "$GITHUB_ENV"
          # echo "CR_KEYRING=$keyring" >> "$GITHUB_ENV"
        # env:
          # GPG_KEYRING_BASE64: "${{ secrets.GPG_KEYRING_BASE64 }}"
          # GPG_PASSPHRASE: "${{ secrets.GPG_PASSPHRASE }}"
          
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        with:
          token: ${{ secrets.HEY101_BOT_TOKEN }}
          fetch-depth: 0

      - name: Prep Helm
        shell: bash
        run: |
          ./.github/scripts/prep_helm.sh

      - name: Setting repo parent dir as safe safe.directory
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Collect changes
        id: collect-changes
        uses: ./.github/actions/collect-changes

      # - name: Generate Changelog
        # shell: bash
        # if: |
          # steps.collect-changes.outputs.changesDetectedAfterTag == 'true'
        # run: |
          # export GOBIN=/usr/local/bin/
          # go install github.com/git-chglog/git-chglog/cmd/git-chglog@latest
          # CHARTS=(${{ steps.collect-changes.outputs.modifiedChartsAfterTag }})
          # parthreads=$(($(nproc) * 2))
          # parallel -j ${parthreads} .github/scripts/changelog.sh '2>&1' ::: ${CHARTS[@]}

      - name: Fix Pre-Commit issues
        shell: bash
        if: |
          steps.collect-changes.outputs.changesDetected == 'true'
        run: |
          echo "Running pre-commit test-and-cleanup..."
          pre-commit run --all ||:
          # Fix sh files to always be executable
          find . -name '*.sh' | xargs chmod +x

      - name: Checkout Catalog
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        if: |
          steps.collect-changes.outputs.changesDetected == 'true'
        with:
          fetch-depth: 1
          repository: hey101/scale-catalog
          token: ${{ secrets.HEY101_BOT_TOKEN }}
          ref: ''
          path: catalog

      - name: build catalog
        shell: bash
        if: |
          steps.collect-changes.outputs.changesDetected == 'true'
        run: |
          CHARTS=(${{ steps.collect-changes.outputs.addedOrModifiedCharts }})
          ./charttool deps
          ./charttool buildSCALE

      - name: Commit Catalog
        if: |
          steps.collect-changes.outputs.changesDetected == 'true'
        run: |
          cd catalog
          git config user.name "hey101"
          git config user.email "hey101[bot]@users.noreply.github.com"
          git add --all
          git commit -sm "Commit new Chart releases for TrueCharts" || exit 0
          git push
          cd -
          rm -rf catalog
